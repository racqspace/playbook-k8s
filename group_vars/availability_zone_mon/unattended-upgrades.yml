---
# Unattended-Upgrade::Origins-Pattern
#   Unattended-Upgrade::Origins-Pattern controls which packages are
#   upgraded.
#
#   Lines below have the format format is "keyword=value,...".  A
#   package will be upgraded only if the values in its metadata match
#   all the supplied keywords in a line.  (In other words, omitted
#   keywords are wild cards.) The keywords originate from the Release
#   file, but several aliases are accepted.  The accepted keywords are:
#     a,archive,suite (eg, "stable")
#     c,component     (eg, "main", "crontrib", "non-free")
#     l,label         (eg, "Debian", "Debian-Security")
#     o,origin        (eg, "Debian", "Unofficial Multimedia Packages")
#     n,codename      (eg, "jessie", "jessie-updates")
#     site          (eg, "http.debian.net")
#   The available values on the system are printed by the command
#   "apt-cache policy", and can be debugged by running
#   "unattended-upgrades -d" and looking at the log file.
#
#   Within lines unattended-upgrades allows 2 macros whose values are
#   derived from /etc/debian_version:
#     ${distro_id}            Installed origin.
#     ${distro_codename}      Installed codename (eg, "jessie")
#
#   Automatically upgrade packages from these origin patterns
#   e.g.: 'o=Debian,a=stable', 'o=Debian,a=stable-updates'
#
#   Left unset, distribution-specific defaults will be used through
#   __unattended_upgrades_origins_patterns variable only if this variable
#   is not provided externally
unattended_upgrades_origins_patterns:
  - 'origin=Ubuntu,archive=${distro_codename}-security'
  - 'origin=Ubuntu,archive=${distro_codename}'
  - 'origin=Ubuntu,archive=${distro_codename}-updates'

# Unattended-Upgrade::Package-Blacklist
#   List of packages to not update (regexp are supported)
unattended_upgrades_package_blacklist: []

# Unattended-Upgrade::AutoFixInterruptedDpkg
#   On a unclean dpkg exit unattended-upgrades will run
#     dpkg --force-confold --configure -a
#   The default is true, to ensure updates keep getting installed
unattended_upgrades_autofix_interrupted_dpkg: true

# Unattended-Upgrade::MinimalSteps
#   Split the upgrade into the smallest possible chunks so that
#   they can be interrupted with SIGUSR1. This makes the upgrade
#   a bit slower but it has the benefit that shutdown while a upgrade
#   is running is possible (with a small delay)
unattended_upgrades_minimal_steps: true

# Unattended-Upgrade::InstallOnShutdown
#   Install all unattended-upgrades when the machine is shuting down
#   instead of doing it in the background while the machine is running
#   This will (obviously) make shutdown slower
unattended_upgrades_install_on_shutdown: false

# Unattended-Upgrade::Mail
#   Send email to this address for problems or packages upgrades
#   If empty or unset then no email is sent, make sure that you
#   have a working mail setup on your system. A package that provides
#   'mailx' must be installed.
unattended_upgrades_mail: false

# Unattended-Upgrade::MailOnlyOnError
#   Set this value to "true" to get emails only on errors. Default
#   is to always send a mail if Unattended-Upgrade::Mail is set
unattended_upgrades_mail_only_on_error: false

# Unattended-Upgrade::Remove-Unused-Dependencies
#   Do automatic removal of all unused dependencies after the upgrade
#   (equivalent to apt-get autoremove)
unattended_upgrades_remove_unused_dependencies: true

# Unattended-Upgrade::Remove-New-Unused-Dependencies
#    Remove any new unused dependencies after the upgrade
unattended_upgrades_remove_new_unused_dependencies: true

# Unattended-Upgrade::Automatic-Reboot
#   Automatically reboot *WITHOUT CONFIRMATION* if a
#   the file /var/run/reboot-required is found after the upgrade
unattended_upgrades_automatic_reboot: true

# Unattended-Upgrade::Automatic-Reboot-Time
#   If automatic reboot is enabled and needed, reboot at the specific
#   time instead of immediately
unattended_upgrades_automatic_reboot_time: "02:00"

# Unattended-Upgrade::Update-Days
#   Set the days of the week that updates should be applied. The days
#   can be specified as localized abbreviated or full names. Or as
#   integers where "0" is Sunday, "1" is Monday etc. Example: {"Mon";"Fri"};
unattended_upgrades_update_days: '{"Mon"}'

# Unattended-Upgrade::IgnoreAppsRequireRestart
#   Do upgrade application even if it requires restart after upgrade
#   I.e. "XB-Upgrade-Requires: app-restart" is set in the debian/control file
unattended_upgrades_ignore_apps_require_restart: false

# Unattended-Upgrade::SyslogEnable
#   Write events to syslog, which is useful in environments where syslog
#   messages are sent to a central store.
unattended_upgrades_syslog_enable: false

# Unattended-Upgrade::SyslogFacility
#   Write events to the specified syslog facility, or the daemon facility if
#   not specified. Requires the Unattended-Upgrade::SyslogEnable option to be
#   set to true.
# unattended_upgrades_syslog_facility: "daemon"

# Dpkg::Options
#   Append options for governing dpkg behavior, e.g. --force-confdef.
#   Provide dpkg options that take effect during unattended upgrades.
#   By default no flags are appended. Configuration file changes can
#   block installation of certain packages. Passing the flags
#   "--force-confdef" and "--force-confold" will ensure updates are applied
#   and old configuration files are preserved.
unattended_upgrades_dpkg_options: []

# unattended_upgrades_dpkg_options:
#   - "--force-confdef"
#   - "--force-confold"

# Acquire::http::Dl-Limit
#   Use apt bandwidth limit feature, this example limits the download speed
#   to 2048kB/sec
unattended_dl_limit: 2048
...
